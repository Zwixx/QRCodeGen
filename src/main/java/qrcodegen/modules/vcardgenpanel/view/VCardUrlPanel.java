/*
 Copyright 2012 Stefan Ganzer

 This file is part of QRCodeGen.

 QRCodeGen is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 QRCodeGen is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package qrcodegen.modules.vcardgenpanel.view;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.ArrayList;
import java.util.EnumMap;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;
import javax.swing.BoxLayout;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JPanel;
import qrcodegen.modules.vcard.Property;
import qrcodegen.modules.vcard.PropertyEntry;
import qrcodegen.modules.vcard.UrlProperty;
import qrcodegen.modules.vcard.VCardProperty;
import qrcodegen.modules.vcardgenpanel.PropertyProviderViews;
import qrcodegen.modules.vcardgenpanel.VCardPropertyProvider;
import qrcodegen.modules.vcardgenpanel.model.VCardUrlModel;
import qrcodegen.modules.vcardgenpanel.presentationmodel.VCardUrlPresentationModel;
import qrcodegen.tools.StaticTools;

/**
 *
 * @author Stefan Ganzer
 */
public class VCardUrlPanel extends javax.swing.JPanel implements PropertyProviderViews {

	static final String PANEL_STATUS_PROPERTY = "PanelStatus";
	private static final ResourceBundle RES = ResourceBundle.getBundle("qrcodegen/modules/vcardgenpanel/view/VCardUrlPanel");
	private static final int MNEMONIC = getKeyCodeFromResourceBundle("MNEMONIC");
	private final VCardUrlPresentationModel presentationModel;
	private final URLPanel urlPanel;

	/** Creates new form VCardUrlPanel */
	public VCardUrlPanel() {
		this(new VCardUrlPresentationModel(new VCardUrlModel()));
	}

	public VCardUrlPanel(VCardUrlPresentationModel presentationModel) {
		if(presentationModel == null){
			throw new NullPointerException();
		}
		this.presentationModel = presentationModel;
		urlPanel = new URLPanel(this.presentationModel);
		initComponents();
		setName(RES.getString("URL"));
		setLayout(new BoxLayout(this, BoxLayout.PAGE_AXIS));
		add(urlPanel);
		urlPanel.addPropertyChangeListener(URLPanel.PANEL_STATUS, new PanelListener());
	}
	
	

	@Override
	public JPanel getJPanel() {
		return this;
	}

	@Override
	public int getMnemonic() {
		return MNEMONIC;

	}

	private static int getKeyCodeFromResourceBundle(String key) {
		assert key != null;
		return StaticTools.getKeyCodeForString(RES.getString(key));
	}

	private class PanelListener implements PropertyChangeListener {

		@Override
		public void propertyChange(PropertyChangeEvent evt) {
			firePropertyChange(PANEL_STATUS_PROPERTY, evt.getOldValue(), evt.getNewValue());
		}
	}

	/** This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
