/*
 Copyright 2012 Stefan Ganzer

 This file is part of QRCodeGen.

 QRCodeGen is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 QRCodeGen is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package qrcodegen.modules.vcardgenpanel.view;

import java.awt.event.ActionListener;
import java.util.ResourceBundle;
import javax.swing.ButtonGroup;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JRadioButton;
import javax.swing.LayoutStyle.ComponentPlacement;

/**
 *
 * @author Stefan Ganzer
 */
public class WorkHomeSelector2 extends javax.swing.JPanel {

	public static final String OTHER_ACTION_COMMAND = "Other";
	public static final String HOME_ACTION_COMMAND = "Home";
	public static final String WORK_ACTION_COMMAND = "Work";
	private static final ResourceBundle RES = ResourceBundle.getBundle("qrcodegen/modules/vcardgenpanel/view/WorkHomeSelector2");

	/** Creates new form WorkHomeSelector */
	public WorkHomeSelector2() {
		initComponents();
		otherRadioButton.setActionCommand("Other");
		homeRadioButton.setActionCommand("Home");
		workRadioButton.setActionCommand("Work");
	}

	public void otherRadioButtonAddActionListener(ActionListener listener) {
		otherRadioButton.addActionListener(listener);
	}

	public void otherRadioButtonRemoveActionListener(ActionListener listener) {
		otherRadioButton.removeActionListener(listener);
	}

	public void homeRadioButtonAddActionListener(ActionListener listener) {
		homeRadioButton.addActionListener(listener);
	}

	public void homeRadioButtonRemoveActionListener(ActionListener listener) {
		homeRadioButton.removeActionListener(listener);
	}

	public void workRadioButtonAddActionListener(ActionListener listener) {
		workRadioButton.addActionListener(listener);
	}

	public void workRadioButtonRemoveActionListener(ActionListener listener) {
		workRadioButton.removeActionListener(listener);
	}

	public void otherRadioButtonDoClick() {
		otherRadioButton.doClick();
	}

	public void homeRadioButtonDoClick() {
		homeRadioButton.doClick();
	}

	public void workRadioButtonDoClick() {
		workRadioButton.doClick();
	}

	public void otherRadioButtonSetSelected(boolean bool) {
		otherRadioButton.setSelected(bool);
	}

	public void homeRadioButtonSetSelected(boolean bool) {
		homeRadioButton.setSelected(bool);
	}

	public void workRadioButtonSetSelected(boolean bool) {
		workRadioButton.setSelected(bool);
	}

	public boolean isOtherRadioButtonSelected() {
		return otherRadioButton.isSelected();
	}

	public boolean isWorkRadioButtonSelected() {
		return workRadioButton.isSelected();
	}

	public boolean isHomeRadioButtonSelected() {
		return homeRadioButton.isSelected();
	}

	/** This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new ButtonGroup();
        workRadioButton = new JRadioButton();
        homeRadioButton = new JRadioButton();
        otherRadioButton = new JRadioButton();

        setName("otherRadioButton"); // NOI18N

        buttonGroup.add(workRadioButton);
        workRadioButton.setText(RES.getString("WorkHomeSelector.workRadioButton.text")); // NOI18N
        workRadioButton.setActionCommand(WORK_ACTION_COMMAND);
        workRadioButton.setName("workRadioButton"); // NOI18N

        buttonGroup.add(homeRadioButton);
        homeRadioButton.setText(RES.getString("WorkHomeSelector.homeRadioButton.text")); // NOI18N
        homeRadioButton.setActionCommand(HOME_ACTION_COMMAND);
        homeRadioButton.setName("homeRadioButton"); // NOI18N

        buttonGroup.add(otherRadioButton);
        otherRadioButton.setSelected(true);
        otherRadioButton.setText(RES.getString("WorkHomeSelector.otherRadioButton.text")); // NOI18N
        otherRadioButton.setActionCommand(OTHER_ACTION_COMMAND);

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(otherRadioButton)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(homeRadioButton)
                .addPreferredGap(ComponentPlacement.RELATED)
                .addComponent(workRadioButton)
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(Alignment.CENTER)
                    .addComponent(otherRadioButton)
                    .addComponent(homeRadioButton)
                    .addComponent(workRadioButton))
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ButtonGroup buttonGroup;
    private JRadioButton homeRadioButton;
    private JRadioButton otherRadioButton;
    private JRadioButton workRadioButton;
    // End of variables declaration//GEN-END:variables
}
